# CivitScraper Configuration File
# This is the main configuration file that controls how CivitScraper operates.

# =============================================================================
# Global Defaults
# These settings apply to all operations unless overridden in specific sections
# =============================================================================
defaults:
  scan:
    recursive: true      # Search in subdirectories
    skip_existing: true  # Skip files that already have metadata
    verify_hashes: true  # Verify file hashes against CivitAI data

  output:
    metadata:
      enabled: true           # Generate metadata files
      path: "{model_dir}"     # Where to save metadata
      filename: "{model_name}.json"  # Metadata filename
      html:
        enabled: true         # Generate HTML preview pages
        filename: "{model_name}.html"  # HTML filename
    images:
      enabled: true          # Download preview images
      path: "{model_dir}"    # Where to save images
      filenames:
        preview: "{model_name}.preview{ext}"  # Preview image filename pattern
        thumbnail: "{model_name}.thumb{ext}"  # Thumbnail image filename pattern

  organization:
    enabled: true            # Enable model organization
    dry_run: false          # [true/false] Simulate file operations without making changes
    template: "by_type"      # Organization template to use (see below for options)
    custom_template: ""      # Custom organization path template (leave empty to use predefined template)
    output_dir: "{model_dir}/organized"  # Where to put organized files
    operation_mode: "copy"   # [copy/move/symlink] How to organize files

# =============================================================================
# API Configuration
# Settings for connecting to the CivitAI API
# =============================================================================
api:
  key: null                # Your CivitAI API key (Set via CIVITAI_API_KEY environment variable)
  base_url: "https://civitai.com/api/v1"  # API endpoint
  timeout: 30             # [seconds] API request timeout
  max_retries: 3         # Number of times to retry failed requests
  user_agent: "CivitScraper/0.2.0"  # User agent string

  # Batch processing settings (for advanced users)
  batch:
    enabled: true         # [true/false] Enable batch processing
    max_concurrent: 4     # Maximum parallel requests using thread-safe semaphore
    rate_limit: 100      # Requests/minute (uses token bucket with per-endpoint tracking)
    retry_delay: 2000    # Base delay (ms) for exponential backoff when rate limited
    cache_size: 100      # LRU cache size - evicts least recently used entries when full

    # Advanced batch settings
    # Circuit breaker prevents API abuse during outages by tracking failures per endpoint
    circuit_breaker:
      failure_threshold: 5    # Number of failures before blocking requests to an endpoint
      reset_timeout: 60       # Seconds to wait before auto-recovery after blocking

    # Adaptive batch sizing adjusts request batch size based on success rates
    adaptive_batch:
      min_size: 2            # Minimum batch size, used when performance is poor
      max_size: 50           # Maximum batch size, caps growth during good performance
      scale_up_rate: 0.95    # Success rate threshold (95%) to double batch size
      scale_down_rate: 0.5   # Success rate threshold (50%) to reduce batch size
                            # Between 50-95%: halve size, Below 50%: quarter size

# =============================================================================
# Input Paths
# Define where to look for different types of model files
# Example paths shown - adjust these to match your setup
# =============================================================================
input_paths:
  # LORA models directory
  lora:
    path: "./models/Lora"           # Directory containing LORA models
    type: LORA                      # Model type identifier
    patterns: ["*.safetensors", "*.pt"]  # File patterns to match

  # Stable Diffusion checkpoints
  checkpoints:
    path: "./models/Stable-diffusion"  # Directory containing checkpoints
    type: Checkpoint                   # Model type identifier
    patterns: ["*.safetensors", "*.ckpt"]  # File patterns to match

  # Textual Inversion embeddings
  embeddings:
    path: "./models/embeddings"     # Directory containing embeddings
    type: TextualInversion         # Model type identifier
    patterns: ["*.pt", "*.safetensors"]  # File patterns to match

# =============================================================================
# Job Templates
# Predefined configurations for common tasks
# Use these as building blocks for your jobs
# =============================================================================
job_templates:
  # Basic scan without organization
  # Use this for quickly scanning models without reorganizing them
  base_scan:
    type: scan-paths
    inherit: defaults.scan          # Inherits scanning settings from defaults
    output: inherit:defaults.output # Inherits output settings from defaults
    organize: false                 # Don't organize files

  # Full processing with organization
  # Use this for complete model processing including organization
  full_process:
    inherit: base_scan             # Builds upon base_scan template
    organize: true                 # Enable organization
    organization: inherit:defaults.organization  # Use default organization settings

  # Metadata-only template
  # Use this when you only want to update metadata without downloading images
  metadata_only:
    inherit: base_scan
    output:
      inherit: defaults.output
      images:
        enabled: false             # Disable image downloads

  # Trigger word synchronization template
  sync_triggers:
    type: sync-lora-triggers
    description: "Synchronize LoRA trigger words"
    inherit: defaults.scan  # Inherit basic scanning settings
    loras_file: "loras.json"  # Default path to loras.json

# =============================================================================
# Jobs
# Define specific tasks to run
# Each job uses a template and can override specific settings
# =============================================================================
jobs:
  # Process all model types
  fetch-all:
    template: full_process         # Use full processing template
    paths: ["lora", "checkpoints", "embeddings"]  # Process all path types

  # Update LORA metadata only
  fetch-loras:
    template: metadata_only        # Use metadata-only template
    paths: ["lora"]               # Only process LORA models
    output:
      metadata:
        path: "./metadata/lora"    # Override metadata output location

  # Organize checkpoints with custom template
  organize-checkpoints:
    template: full_process
    paths: ["checkpoints"]
    organization:
      template: "by_type_and_creator"  # Use type+creator organization

  # Synchronize trigger words
  sync-triggers:
    template: sync_triggers  # Use the trigger sync template
    paths: ["lora"]  # Reference input_paths by ID

# =============================================================================
# Scanner Settings
# Configure how the scanner operates and caches data
# =============================================================================
scanner:
  cache_dir: ".civitscaper_cache"  # Where to store cache files
  cache_validity: 86400            # [seconds] Cache lifetime (24 hours)
  force_refresh: false             # [true/false] Ignore cache and force refresh

# =============================================================================
# Logging Configuration
# Control how the application logs information
# =============================================================================
logging:
  level: DEBUG                     # [DEBUG/INFO/WARNING/ERROR/CRITICAL] Main log level

  # Console output settings
  console:
    enabled: false                 # [true/false] Log to console
    level: INFO                    # Console log level
    simple: true                   # Use simplified format

  # File logging settings
  file:
    enabled: true                  # [true/false] Log to file
    level: DEBUG                   # File log level
    directory: logs                # Log file directory
    max_size: 10                  # [MB] Max log file size
    backup_count: 5               # Number of backup files to keep
